#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------



A = read($1)

num_bin_defns = sum(A)
bin_defns = matrix(0, rows=num_bin_defns, cols=2)

attr2pos = matrix(0, rows=nrow(A), cols=2)
pos = 1
for(i in 1:nrow(A)){
	number_of_bins = as.scalar(A[i,1])
	attr2pos[i,1] = pos
	attr2pos[i,2] = pos + number_of_bins - 1
	pos = pos + number_of_bins
}

parfor(i in 1:nrow(A), check=0){
	num_bins = as.scalar(A[i,1])
	
	start_position = as.scalar(attr2pos[i,1])
	end_position = as.scalar(attr2pos[i,2])
	
	#SEQ CALL 1
	bin_defns[start_position:end_position,1] = seq(1, num_bins, 1)
	
	#SEQ CALL 2
	bin_defns[start_position:end_position,2] = seq(1, 1+num_bins-1, 1)
}
write(bin_defns, $2)

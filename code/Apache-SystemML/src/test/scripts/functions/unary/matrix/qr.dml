#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------


/*
 * DML script to test QR factorization
 */

A = read($1);

[H,R] = qr(A);

# Compute Q from Householder vectors
m = nrow(A);
n = ncol(A);

/*
ones = matrix(1, m, 1);
eye = diag(ones);
Q = eye;
for( j in n:1 ) {
    v = H[,j];
    Qj = eye - 2 * (v %*% t(v))/as.scalar((t(v)%*%v));
    Q = Qj %*% Q;
}

# Q must be orthogonal i.e., Q = Q^{-1}
I = Q %*% t(Q);

# Multiplying Q and R, we must get back original A
B = Q %*% R;

d = sum(A-B);
print("d = " + d);
diff = 0; #sum(A - B);
#   write the difference between original A and computed B as a dummy 1x1 matrix
D = matrix(1,1,1);
D = diff*D;

write(I, $2);
write(D, $3);
*/

# Compute t(Q)%*%b using computed householder vectors
b = read($2);
tQb = matrix(0, m, 1);
min_mn = min(m,n);
for(j in min_mn:1) {
  v = H[,j];
  b = b - 2 * (v %*% (t(v) %*% b)); 
}

write(b, $3);
